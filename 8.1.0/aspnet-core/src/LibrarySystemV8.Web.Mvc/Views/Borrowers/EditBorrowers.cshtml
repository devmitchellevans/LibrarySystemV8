@using LibrarySystem.Web.Models.Borrowers
@model CreateOrEditBorrowerViewModel
@section scripts{
    <environment names="Development">
        <script src="~/view-resources/Views/Borrowers/CreateOrEditBorrower.js" asp-append-version="true"></script>
    </environment>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row">
            @L("CreateOrEditBorrower")

        </div>
    </div>
</section>

<section class="content">
    <form name="borrowerCreateOrEditForm" id="borrowerCreateOrEditForm" role="form" class="form-horizontal">
        <div class="modal-body">
            <div class="tab-content mt-4">
                <div role="tabpanel" class="tab-pane container active">
                    <input type="hidden" name="Id" value="@Model?.Id" data-borrow-id />
                    <div class="form-group row required">
                        <label class="col-md-3 col-form-label">@L("BorrowDate")</label>
                        <div class="col-md-9">
                            <input type="datetime" class="form-control" name="BorrowDate" value="@Model?.BorrowDate" data-borrow-date />
                        </div>
                    </div>
                    <div class="form-group row required">
                        <label class="col-md-3 col-form-label">@L("ExpectedReturnDate")</label>
                        <div class="col-md-9">
                            <input type="datetime" class="form-control" name="ExpectedReturnDate" value="@Model?.ExpectedReturnDate" data-expected-return-date />
                        </div>
                    </div>
                    <div class="form-group row required">
                        <label class="col-md-3 col-form-label">@L("ReturnDate")</label>
                        <div class="col-md-9">
                            <input type="datetime" class="form-control" name="StudentEmail" value="@Model?.ReturnDate" data-return-date/>
                        </div>
                    </div>
                    <div class="form-group row required">
                        <label class="col-md-3 col-form-label">@L("Book")</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.BookId, Model.Books.Select(d => new SelectListItem {Text = d.BookTitle, Value = d.Id.ToString()}), "Select Book", new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group row required">
                        <label class="col-md-3 col-form-label">@L("Student")</label>
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.StudentId, Model.Students.Select(d => new SelectListItem {Text = d.StudentName, Value = d.Id.ToString()}), "Select Student", new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-9">
                            <input type="hidden" name="IsBorrowed" value="false" id="CreateOrEditBorrowerIsBorrowed"/>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-default cancel-button" name="cancel" id="cancel">Cancel</button>
                        <button type="submit" class="btn btn-primary save-button" name="submit" id="submit">Submit </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</section>
